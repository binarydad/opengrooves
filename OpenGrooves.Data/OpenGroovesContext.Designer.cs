//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("OpenGroovesModel", "aspnet_UsersInRoles", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OpenGrooves.Data.Role), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OpenGrooves.Data.User))]
[assembly: EdmRelationshipAttribute("OpenGroovesModel", "FK_FeedItems_Bands", "Band", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OpenGrooves.Data.Band), "FeedItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OpenGrooves.Data.FeedItem), true)]
[assembly: EdmRelationshipAttribute("OpenGroovesModel", "FK_FeedItems_FeedItemTypes", "FeedItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OpenGrooves.Data.FeedItemType), "FeedItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OpenGrooves.Data.FeedItem), true)]
[assembly: EdmRelationshipAttribute("OpenGroovesModel", "BandsGenres", "Band", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OpenGrooves.Data.Band), "Genre", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OpenGrooves.Data.Genre))]
[assembly: EdmRelationshipAttribute("OpenGroovesModel", "FK_BandsEvents_Bands", "Band", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OpenGrooves.Data.Band), "BandsEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OpenGrooves.Data.BandsEvent), true)]
[assembly: EdmRelationshipAttribute("OpenGroovesModel", "FK_BandsEvents_Events", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OpenGrooves.Data.Event), "BandsEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OpenGrooves.Data.BandsEvent), true)]
[assembly: EdmRelationshipAttribute("OpenGroovesModel", "UsersEvents", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OpenGrooves.Data.User), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OpenGrooves.Data.Event))]
[assembly: EdmRelationshipAttribute("OpenGroovesModel", "FK_Events_Venues", "Venue", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OpenGrooves.Data.Venue), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OpenGrooves.Data.Event))]
[assembly: EdmRelationshipAttribute("OpenGroovesModel", "UsersVenues", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OpenGrooves.Data.User), "Venue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OpenGrooves.Data.Venue))]
[assembly: EdmRelationshipAttribute("OpenGroovesModel", "FK_UsersInBands_aspnet_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OpenGrooves.Data.User), "UsersBand", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OpenGrooves.Data.UsersBand), true)]
[assembly: EdmRelationshipAttribute("OpenGroovesModel", "FK_UsersInBands_aspnet_Users1", "Band", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OpenGrooves.Data.Band), "UsersBand", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OpenGrooves.Data.UsersBand), true)]
[assembly: EdmRelationshipAttribute("OpenGroovesModel", "FK_UsersBands_MemberTypes", "MemberType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OpenGrooves.Data.MemberType), "UsersBand", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OpenGrooves.Data.UsersBand), true)]
[assembly: EdmRelationshipAttribute("OpenGroovesModel", "FK_UsersBands_RelationTypes", "RelationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OpenGrooves.Data.RelationType), "UsersBand", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OpenGrooves.Data.UsersBand), true)]
[assembly: EdmRelationshipAttribute("OpenGroovesModel", "BandsImages", "Band", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OpenGrooves.Data.Band), "Image", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OpenGrooves.Data.Image))]
[assembly: EdmRelationshipAttribute("OpenGroovesModel", "FK_Images_aspnet_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OpenGrooves.Data.User), "Image", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OpenGrooves.Data.Image), true)]
[assembly: EdmRelationshipAttribute("OpenGroovesModel", "FK_FeedItems_aspnet_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OpenGrooves.Data.User), "FeedItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OpenGrooves.Data.FeedItem), true)]
[assembly: EdmRelationshipAttribute("OpenGroovesModel", "FK_FeedItems_Events", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OpenGrooves.Data.Event), "FeedItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OpenGrooves.Data.FeedItem), true)]
[assembly: EdmRelationshipAttribute("OpenGroovesModel", "FK_Galleries_aspnet_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OpenGrooves.Data.User), "Gallery", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OpenGrooves.Data.Gallery), true)]
[assembly: EdmRelationshipAttribute("OpenGroovesModel", "FK_Images_Galleries", "Gallery", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OpenGrooves.Data.Gallery), "Image", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OpenGrooves.Data.Image), true)]
[assembly: EdmRelationshipAttribute("OpenGroovesModel", "FK_MessageRecipients_aspnet_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OpenGrooves.Data.User), "MessageRecipient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OpenGrooves.Data.MessageRecipient), true)]
[assembly: EdmRelationshipAttribute("OpenGroovesModel", "FK_Messages_aspnet_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OpenGrooves.Data.User), "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OpenGrooves.Data.Message), true)]
[assembly: EdmRelationshipAttribute("OpenGroovesModel", "FK_MessageRecipients_Messages", "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OpenGrooves.Data.Message), "MessageRecipient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OpenGrooves.Data.MessageRecipient), true)]
[assembly: EdmRelationshipAttribute("OpenGroovesModel", "FK_Galleries_Bands", "Band", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OpenGrooves.Data.Band), "Gallery", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OpenGrooves.Data.Gallery), true)]
[assembly: EdmRelationshipAttribute("OpenGroovesModel", "FK_UserSettings_aspnet_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OpenGrooves.Data.User), "UserSetting", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OpenGrooves.Data.UserSetting), true)]
[assembly: EdmRelationshipAttribute("OpenGroovesModel", "FK_Audio_Bands", "Band", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OpenGrooves.Data.Band), "Audio", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OpenGrooves.Data.Audio), true)]

#endregion

namespace OpenGrooves.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class OpenGroovesEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new OpenGroovesEntities object using the connection string found in the 'OpenGroovesEntities' section of the application configuration file.
        /// </summary>
        public OpenGroovesEntities() : base("name=OpenGroovesEntities", "OpenGroovesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new OpenGroovesEntities object.
        /// </summary>
        public OpenGroovesEntities(string connectionString) : base(connectionString, "OpenGroovesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new OpenGroovesEntities object.
        /// </summary>
        public OpenGroovesEntities(EntityConnection connection) : base(connection, "OpenGroovesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Band> Bands
        {
            get
            {
                if ((_Bands == null))
                {
                    _Bands = base.CreateObjectSet<Band>("Bands");
                }
                return _Bands;
            }
        }
        private ObjectSet<Band> _Bands;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RelationType> RelationTypes
        {
            get
            {
                if ((_RelationTypes == null))
                {
                    _RelationTypes = base.CreateObjectSet<RelationType>("RelationTypes");
                }
                return _RelationTypes;
            }
        }
        private ObjectSet<RelationType> _RelationTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeedItem> FeedItems
        {
            get
            {
                if ((_FeedItems == null))
                {
                    _FeedItems = base.CreateObjectSet<FeedItem>("FeedItems");
                }
                return _FeedItems;
            }
        }
        private ObjectSet<FeedItem> _FeedItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeedItemType> FeedItemTypes
        {
            get
            {
                if ((_FeedItemTypes == null))
                {
                    _FeedItemTypes = base.CreateObjectSet<FeedItemType>("FeedItemTypes");
                }
                return _FeedItemTypes;
            }
        }
        private ObjectSet<FeedItemType> _FeedItemTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Genre> Genres
        {
            get
            {
                if ((_Genres == null))
                {
                    _Genres = base.CreateObjectSet<Genre>("Genres");
                }
                return _Genres;
            }
        }
        private ObjectSet<Genre> _Genres;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BandsEvent> BandsEvents
        {
            get
            {
                if ((_BandsEvents == null))
                {
                    _BandsEvents = base.CreateObjectSet<BandsEvent>("BandsEvents");
                }
                return _BandsEvents;
            }
        }
        private ObjectSet<BandsEvent> _BandsEvents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Event> Events
        {
            get
            {
                if ((_Events == null))
                {
                    _Events = base.CreateObjectSet<Event>("Events");
                }
                return _Events;
            }
        }
        private ObjectSet<Event> _Events;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Venue> Venues
        {
            get
            {
                if ((_Venues == null))
                {
                    _Venues = base.CreateObjectSet<Venue>("Venues");
                }
                return _Venues;
            }
        }
        private ObjectSet<Venue> _Venues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MemberType> MemberTypes
        {
            get
            {
                if ((_MemberTypes == null))
                {
                    _MemberTypes = base.CreateObjectSet<MemberType>("MemberTypes");
                }
                return _MemberTypes;
            }
        }
        private ObjectSet<MemberType> _MemberTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UsersBand> UsersBands
        {
            get
            {
                if ((_UsersBands == null))
                {
                    _UsersBands = base.CreateObjectSet<UsersBand>("UsersBands");
                }
                return _UsersBands;
            }
        }
        private ObjectSet<UsersBand> _UsersBands;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Image> Images
        {
            get
            {
                if ((_Images == null))
                {
                    _Images = base.CreateObjectSet<Image>("Images");
                }
                return _Images;
            }
        }
        private ObjectSet<Image> _Images;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Gallery> Galleries
        {
            get
            {
                if ((_Galleries == null))
                {
                    _Galleries = base.CreateObjectSet<Gallery>("Galleries");
                }
                return _Galleries;
            }
        }
        private ObjectSet<Gallery> _Galleries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MessageRecipient> MessageRecipients
        {
            get
            {
                if ((_MessageRecipients == null))
                {
                    _MessageRecipients = base.CreateObjectSet<MessageRecipient>("MessageRecipients");
                }
                return _MessageRecipients;
            }
        }
        private ObjectSet<MessageRecipient> _MessageRecipients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Message> Messages
        {
            get
            {
                if ((_Messages == null))
                {
                    _Messages = base.CreateObjectSet<Message>("Messages");
                }
                return _Messages;
            }
        }
        private ObjectSet<Message> _Messages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserSetting> UserSettings
        {
            get
            {
                if ((_UserSettings == null))
                {
                    _UserSettings = base.CreateObjectSet<UserSetting>("UserSettings");
                }
                return _UserSettings;
            }
        }
        private ObjectSet<UserSetting> _UserSettings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Audio> Audios
        {
            get
            {
                if ((_Audios == null))
                {
                    _Audios = base.CreateObjectSet<Audio>("Audios");
                }
                return _Audios;
            }
        }
        private ObjectSet<Audio> _Audios;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Bands EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBands(Band band)
        {
            base.AddObject("Bands", band);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RelationTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRelationTypes(RelationType relationType)
        {
            base.AddObject("RelationTypes", relationType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeedItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeedItems(FeedItem feedItem)
        {
            base.AddObject("FeedItems", feedItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeedItemTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeedItemTypes(FeedItemType feedItemType)
        {
            base.AddObject("FeedItemTypes", feedItemType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Genres EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGenres(Genre genre)
        {
            base.AddObject("Genres", genre);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BandsEvents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBandsEvents(BandsEvent bandsEvent)
        {
            base.AddObject("BandsEvents", bandsEvent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvents(Event @event)
        {
            base.AddObject("Events", @event);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Venues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVenues(Venue venue)
        {
            base.AddObject("Venues", venue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MemberTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMemberTypes(MemberType memberType)
        {
            base.AddObject("MemberTypes", memberType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsersBands EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsersBands(UsersBand usersBand)
        {
            base.AddObject("UsersBands", usersBand);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Images EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImages(Image image)
        {
            base.AddObject("Images", image);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Galleries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGalleries(Gallery gallery)
        {
            base.AddObject("Galleries", gallery);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MessageRecipients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessageRecipients(MessageRecipient messageRecipient)
        {
            base.AddObject("MessageRecipients", messageRecipient);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Messages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessages(Message message)
        {
            base.AddObject("Messages", message);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserSettings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserSettings(UserSetting userSetting)
        {
            base.AddObject("UserSettings", userSetting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Audios EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAudios(Audio audio)
        {
            base.AddObject("Audios", audio);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OpenGroovesModel", Name="Audio")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Audio : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Audio object.
        /// </summary>
        /// <param name="audioID">Initial value of the AudioID property.</param>
        /// <param name="bandID">Initial value of the BandID property.</param>
        /// <param name="url">Initial value of the Url property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="batchID">Initial value of the BatchID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static Audio CreateAudio(global::System.Guid audioID, global::System.Guid bandID, global::System.String url, global::System.String title, global::System.Guid batchID, global::System.DateTime date)
        {
            Audio audio = new Audio();
            audio.AudioID = audioID;
            audio.BandID = bandID;
            audio.Url = url;
            audio.Title = title;
            audio.BatchID = batchID;
            audio.Date = date;
            return audio;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AudioID
        {
            get
            {
                return _AudioID;
            }
            set
            {
                if (_AudioID != value)
                {
                    OnAudioIDChanging(value);
                    ReportPropertyChanging("AudioID");
                    _AudioID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AudioID");
                    OnAudioIDChanged();
                }
            }
        }
        private global::System.Guid _AudioID;
        partial void OnAudioIDChanging(global::System.Guid value);
        partial void OnAudioIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BandID
        {
            get
            {
                return _BandID;
            }
            set
            {
                OnBandIDChanging(value);
                ReportPropertyChanging("BandID");
                _BandID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BandID");
                OnBandIDChanged();
            }
        }
        private global::System.Guid _BandID;
        partial void OnBandIDChanging(global::System.Guid value);
        partial void OnBandIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BatchID
        {
            get
            {
                return _BatchID;
            }
            set
            {
                OnBatchIDChanging(value);
                ReportPropertyChanging("BatchID");
                _BatchID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BatchID");
                OnBatchIDChanged();
            }
        }
        private global::System.Guid _BatchID;
        partial void OnBatchIDChanging(global::System.Guid value);
        partial void OnBatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_Audio_Bands", "Band")]
        public Band Band
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Band>("OpenGroovesModel.FK_Audio_Bands", "Band").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Band>("OpenGroovesModel.FK_Audio_Bands", "Band").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Band> BandReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Band>("OpenGroovesModel.FK_Audio_Bands", "Band");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Band>("OpenGroovesModel.FK_Audio_Bands", "Band", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OpenGroovesModel", Name="Band")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Band : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Band object.
        /// </summary>
        /// <param name="bandId">Initial value of the BandId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="urlName">Initial value of the UrlName property.</param>
        /// <param name="latitude">Initial value of the Latitude property.</param>
        /// <param name="longitude">Initial value of the Longitude property.</param>
        public static Band CreateBand(global::System.Guid bandId, global::System.DateTime date, global::System.String urlName, global::System.Double latitude, global::System.Double longitude)
        {
            Band band = new Band();
            band.BandId = bandId;
            band.Date = date;
            band.UrlName = urlName;
            band.Latitude = latitude;
            band.Longitude = longitude;
            return band;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BandId
        {
            get
            {
                return _BandId;
            }
            set
            {
                if (_BandId != value)
                {
                    OnBandIdChanging(value);
                    ReportPropertyChanging("BandId");
                    _BandId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BandId");
                    OnBandIdChanged();
                }
            }
        }
        private global::System.Guid _BandId;
        partial void OnBandIdChanging(global::System.Guid value);
        partial void OnBandIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UrlName
        {
            get
            {
                return _UrlName;
            }
            set
            {
                OnUrlNameChanging(value);
                ReportPropertyChanging("UrlName");
                _UrlName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UrlName");
                OnUrlNameChanged();
            }
        }
        private global::System.String _UrlName;
        partial void OnUrlNameChanging(global::System.String value);
        partial void OnUrlNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private global::System.String _Zip;
        partial void OnZipChanging(global::System.String value);
        partial void OnZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AvatarUrl
        {
            get
            {
                return _AvatarUrl;
            }
            set
            {
                OnAvatarUrlChanging(value);
                ReportPropertyChanging("AvatarUrl");
                _AvatarUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AvatarUrl");
                OnAvatarUrlChanged();
            }
        }
        private global::System.String _AvatarUrl;
        partial void OnAvatarUrlChanging(global::System.String value);
        partial void OnAvatarUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Searchable
        {
            get
            {
                return _Searchable;
            }
            set
            {
                OnSearchableChanging(value);
                ReportPropertyChanging("Searchable");
                _Searchable = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Searchable");
                OnSearchableChanged();
            }
        }
        private global::System.String _Searchable;
        partial void OnSearchableChanging(global::System.String value);
        partial void OnSearchableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private global::System.Double _Latitude;
        partial void OnLatitudeChanging(global::System.Double value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private global::System.Double _Longitude;
        partial void OnLongitudeChanging(global::System.Double value);
        partial void OnLongitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Facebook
        {
            get
            {
                return _Facebook;
            }
            set
            {
                OnFacebookChanging(value);
                ReportPropertyChanging("Facebook");
                _Facebook = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Facebook");
                OnFacebookChanged();
            }
        }
        private global::System.String _Facebook;
        partial void OnFacebookChanging(global::System.String value);
        partial void OnFacebookChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Twitter
        {
            get
            {
                return _Twitter;
            }
            set
            {
                OnTwitterChanging(value);
                ReportPropertyChanging("Twitter");
                _Twitter = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Twitter");
                OnTwitterChanged();
            }
        }
        private global::System.String _Twitter;
        partial void OnTwitterChanging(global::System.String value);
        partial void OnTwitterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Website
        {
            get
            {
                return _Website;
            }
            set
            {
                OnWebsiteChanging(value);
                ReportPropertyChanging("Website");
                _Website = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Website");
                OnWebsiteChanged();
            }
        }
        private global::System.String _Website;
        partial void OnWebsiteChanging(global::System.String value);
        partial void OnWebsiteChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_FeedItems_Bands", "FeedItem")]
        public EntityCollection<FeedItem> FeedItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedItem>("OpenGroovesModel.FK_FeedItems_Bands", "FeedItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedItem>("OpenGroovesModel.FK_FeedItems_Bands", "FeedItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "BandsGenres", "Genre")]
        public EntityCollection<Genre> Genres
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Genre>("OpenGroovesModel.BandsGenres", "Genre");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Genre>("OpenGroovesModel.BandsGenres", "Genre", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_BandsEvents_Bands", "BandsEvent")]
        public EntityCollection<BandsEvent> BandsEvents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BandsEvent>("OpenGroovesModel.FK_BandsEvents_Bands", "BandsEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BandsEvent>("OpenGroovesModel.FK_BandsEvents_Bands", "BandsEvent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_UsersInBands_aspnet_Users1", "UsersBand")]
        public EntityCollection<UsersBand> UsersBands
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersBand>("OpenGroovesModel.FK_UsersInBands_aspnet_Users1", "UsersBand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersBand>("OpenGroovesModel.FK_UsersInBands_aspnet_Users1", "UsersBand", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "BandsImages", "Image")]
        public EntityCollection<Image> Images
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Image>("OpenGroovesModel.BandsImages", "Image");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Image>("OpenGroovesModel.BandsImages", "Image", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_Galleries_Bands", "Gallery")]
        public EntityCollection<Gallery> Galleries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Gallery>("OpenGroovesModel.FK_Galleries_Bands", "Gallery");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Gallery>("OpenGroovesModel.FK_Galleries_Bands", "Gallery", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_Audio_Bands", "Audio")]
        public EntityCollection<Audio> Audios
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Audio>("OpenGroovesModel.FK_Audio_Bands", "Audio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Audio>("OpenGroovesModel.FK_Audio_Bands", "Audio", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OpenGroovesModel", Name="BandsEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BandsEvent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BandsEvent object.
        /// </summary>
        /// <param name="bandId">Initial value of the BandId property.</param>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="relationId">Initial value of the RelationId property.</param>
        public static BandsEvent CreateBandsEvent(global::System.Guid bandId, global::System.Guid eventId, global::System.Boolean isActive, global::System.Guid relationId)
        {
            BandsEvent bandsEvent = new BandsEvent();
            bandsEvent.BandId = bandId;
            bandsEvent.EventId = eventId;
            bandsEvent.IsActive = isActive;
            bandsEvent.RelationId = relationId;
            return bandsEvent;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BandId
        {
            get
            {
                return _BandId;
            }
            set
            {
                if (_BandId != value)
                {
                    OnBandIdChanging(value);
                    ReportPropertyChanging("BandId");
                    _BandId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BandId");
                    OnBandIdChanged();
                }
            }
        }
        private global::System.Guid _BandId;
        partial void OnBandIdChanging(global::System.Guid value);
        partial void OnBandIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                if (_EventId != value)
                {
                    OnEventIdChanging(value);
                    ReportPropertyChanging("EventId");
                    _EventId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventId");
                    OnEventIdChanged();
                }
            }
        }
        private global::System.Guid _EventId;
        partial void OnEventIdChanging(global::System.Guid value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RelationId
        {
            get
            {
                return _RelationId;
            }
            set
            {
                OnRelationIdChanging(value);
                ReportPropertyChanging("RelationId");
                _RelationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RelationId");
                OnRelationIdChanged();
            }
        }
        private global::System.Guid _RelationId;
        partial void OnRelationIdChanging(global::System.Guid value);
        partial void OnRelationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ShowTime
        {
            get
            {
                return _ShowTime;
            }
            set
            {
                OnShowTimeChanging(value);
                ReportPropertyChanging("ShowTime");
                _ShowTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShowTime");
                OnShowTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _ShowTime;
        partial void OnShowTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnShowTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Order
        {
            get
            {
                return _Order;
            }
            set
            {
                OnOrderChanging(value);
                ReportPropertyChanging("Order");
                _Order = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Order");
                OnOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _Order;
        partial void OnOrderChanging(Nullable<global::System.Int32> value);
        partial void OnOrderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_BandsEvents_Bands", "Band")]
        public Band Band
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Band>("OpenGroovesModel.FK_BandsEvents_Bands", "Band").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Band>("OpenGroovesModel.FK_BandsEvents_Bands", "Band").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Band> BandReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Band>("OpenGroovesModel.FK_BandsEvents_Bands", "Band");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Band>("OpenGroovesModel.FK_BandsEvents_Bands", "Band", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_BandsEvents_Events", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("OpenGroovesModel.FK_BandsEvents_Events", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("OpenGroovesModel.FK_BandsEvents_Events", "Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("OpenGroovesModel.FK_BandsEvents_Events", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("OpenGroovesModel.FK_BandsEvents_Events", "Event", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OpenGroovesModel", Name="Event")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Event : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Event object.
        /// </summary>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="urlName">Initial value of the UrlName property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="latitude">Initial value of the Latitude property.</param>
        /// <param name="longitude">Initial value of the Longitude property.</param>
        public static Event CreateEvent(global::System.Guid eventId, global::System.String name, global::System.String urlName, global::System.DateTime date, global::System.Double latitude, global::System.Double longitude)
        {
            Event @event = new Event();
            @event.EventId = eventId;
            @event.Name = name;
            @event.UrlName = urlName;
            @event.Date = date;
            @event.Latitude = latitude;
            @event.Longitude = longitude;
            return @event;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                if (_EventId != value)
                {
                    OnEventIdChanging(value);
                    ReportPropertyChanging("EventId");
                    _EventId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventId");
                    OnEventIdChanged();
                }
            }
        }
        private global::System.Guid _EventId;
        partial void OnEventIdChanging(global::System.Guid value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UrlName
        {
            get
            {
                return _UrlName;
            }
            set
            {
                OnUrlNameChanging(value);
                ReportPropertyChanging("UrlName");
                _UrlName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UrlName");
                OnUrlNameChanged();
            }
        }
        private global::System.String _UrlName;
        partial void OnUrlNameChanging(global::System.String value);
        partial void OnUrlNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private global::System.String _Zip;
        partial void OnZipChanging(global::System.String value);
        partial void OnZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Searchable
        {
            get
            {
                return _Searchable;
            }
            set
            {
                OnSearchableChanging(value);
                ReportPropertyChanging("Searchable");
                _Searchable = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Searchable");
                OnSearchableChanged();
            }
        }
        private global::System.String _Searchable;
        partial void OnSearchableChanging(global::System.String value);
        partial void OnSearchableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private global::System.Double _Latitude;
        partial void OnLatitudeChanging(global::System.Double value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private global::System.Double _Longitude;
        partial void OnLongitudeChanging(global::System.Double value);
        partial void OnLongitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OtherBands
        {
            get
            {
                return _OtherBands;
            }
            set
            {
                OnOtherBandsChanging(value);
                ReportPropertyChanging("OtherBands");
                _OtherBands = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OtherBands");
                OnOtherBandsChanged();
            }
        }
        private global::System.String _OtherBands;
        partial void OnOtherBandsChanging(global::System.String value);
        partial void OnOtherBandsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VenueName
        {
            get
            {
                return _VenueName;
            }
            set
            {
                OnVenueNameChanging(value);
                ReportPropertyChanging("VenueName");
                _VenueName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VenueName");
                OnVenueNameChanged();
            }
        }
        private global::System.String _VenueName;
        partial void OnVenueNameChanging(global::System.String value);
        partial void OnVenueNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AvatarUrl
        {
            get
            {
                return _AvatarUrl;
            }
            set
            {
                OnAvatarUrlChanging(value);
                ReportPropertyChanging("AvatarUrl");
                _AvatarUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AvatarUrl");
                OnAvatarUrlChanged();
            }
        }
        private global::System.String _AvatarUrl;
        partial void OnAvatarUrlChanging(global::System.String value);
        partial void OnAvatarUrlChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_BandsEvents_Events", "BandsEvent")]
        public EntityCollection<BandsEvent> BandsEvents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BandsEvent>("OpenGroovesModel.FK_BandsEvents_Events", "BandsEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BandsEvent>("OpenGroovesModel.FK_BandsEvents_Events", "BandsEvent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "UsersEvents", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("OpenGroovesModel.UsersEvents", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("OpenGroovesModel.UsersEvents", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_Events_Venues", "Venue")]
        public Venue Venue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Venue>("OpenGroovesModel.FK_Events_Venues", "Venue").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Venue>("OpenGroovesModel.FK_Events_Venues", "Venue").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Venue> VenueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Venue>("OpenGroovesModel.FK_Events_Venues", "Venue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Venue>("OpenGroovesModel.FK_Events_Venues", "Venue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_FeedItems_Events", "FeedItem")]
        public EntityCollection<FeedItem> FeedItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedItem>("OpenGroovesModel.FK_FeedItems_Events", "FeedItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedItem>("OpenGroovesModel.FK_FeedItems_Events", "FeedItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OpenGroovesModel", Name="FeedItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeedItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeedItem object.
        /// </summary>
        /// <param name="feedItemId">Initial value of the FeedItemId property.</param>
        /// <param name="bandId">Initial value of the BandId property.</param>
        /// <param name="content">Initial value of the Content property.</param>
        /// <param name="feedItemTypeId">Initial value of the FeedItemTypeId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="isGlobal">Initial value of the IsGlobal property.</param>
        public static FeedItem CreateFeedItem(global::System.Guid feedItemId, global::System.Guid bandId, global::System.String content, global::System.Int32 feedItemTypeId, global::System.DateTime date, global::System.Boolean isGlobal)
        {
            FeedItem feedItem = new FeedItem();
            feedItem.FeedItemId = feedItemId;
            feedItem.BandId = bandId;
            feedItem.Content = content;
            feedItem.FeedItemTypeId = feedItemTypeId;
            feedItem.Date = date;
            feedItem.IsGlobal = isGlobal;
            return feedItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid FeedItemId
        {
            get
            {
                return _FeedItemId;
            }
            set
            {
                if (_FeedItemId != value)
                {
                    OnFeedItemIdChanging(value);
                    ReportPropertyChanging("FeedItemId");
                    _FeedItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FeedItemId");
                    OnFeedItemIdChanged();
                }
            }
        }
        private global::System.Guid _FeedItemId;
        partial void OnFeedItemIdChanging(global::System.Guid value);
        partial void OnFeedItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BandId
        {
            get
            {
                return _BandId;
            }
            set
            {
                OnBandIdChanging(value);
                ReportPropertyChanging("BandId");
                _BandId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BandId");
                OnBandIdChanged();
            }
        }
        private global::System.Guid _BandId;
        partial void OnBandIdChanging(global::System.Guid value);
        partial void OnBandIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FeedItemTypeId
        {
            get
            {
                return _FeedItemTypeId;
            }
            set
            {
                OnFeedItemTypeIdChanging(value);
                ReportPropertyChanging("FeedItemTypeId");
                _FeedItemTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeedItemTypeId");
                OnFeedItemTypeIdChanged();
            }
        }
        private global::System.Int32 _FeedItemTypeId;
        partial void OnFeedItemTypeIdChanging(global::System.Int32 value);
        partial void OnFeedItemTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsGlobal
        {
            get
            {
                return _IsGlobal;
            }
            set
            {
                OnIsGlobalChanging(value);
                ReportPropertyChanging("IsGlobal");
                _IsGlobal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsGlobal");
                OnIsGlobalChanged();
            }
        }
        private global::System.Boolean _IsGlobal;
        partial void OnIsGlobalChanging(global::System.Boolean value);
        partial void OnIsGlobalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Guid> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Guid> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                OnEventIdChanging(value);
                ReportPropertyChanging("EventId");
                _EventId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventId");
                OnEventIdChanged();
            }
        }
        private Nullable<global::System.Guid> _EventId;
        partial void OnEventIdChanging(Nullable<global::System.Guid> value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> BatchId
        {
            get
            {
                return _BatchId;
            }
            set
            {
                OnBatchIdChanging(value);
                ReportPropertyChanging("BatchId");
                _BatchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BatchId");
                OnBatchIdChanged();
            }
        }
        private Nullable<global::System.Guid> _BatchId;
        partial void OnBatchIdChanging(Nullable<global::System.Guid> value);
        partial void OnBatchIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_FeedItems_Bands", "Band")]
        public Band Band
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Band>("OpenGroovesModel.FK_FeedItems_Bands", "Band").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Band>("OpenGroovesModel.FK_FeedItems_Bands", "Band").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Band> BandReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Band>("OpenGroovesModel.FK_FeedItems_Bands", "Band");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Band>("OpenGroovesModel.FK_FeedItems_Bands", "Band", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_FeedItems_FeedItemTypes", "FeedItemType")]
        public FeedItemType FeedItemType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedItemType>("OpenGroovesModel.FK_FeedItems_FeedItemTypes", "FeedItemType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedItemType>("OpenGroovesModel.FK_FeedItems_FeedItemTypes", "FeedItemType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FeedItemType> FeedItemTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeedItemType>("OpenGroovesModel.FK_FeedItems_FeedItemTypes", "FeedItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FeedItemType>("OpenGroovesModel.FK_FeedItems_FeedItemTypes", "FeedItemType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_FeedItems_aspnet_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OpenGroovesModel.FK_FeedItems_aspnet_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OpenGroovesModel.FK_FeedItems_aspnet_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OpenGroovesModel.FK_FeedItems_aspnet_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("OpenGroovesModel.FK_FeedItems_aspnet_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_FeedItems_Events", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("OpenGroovesModel.FK_FeedItems_Events", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("OpenGroovesModel.FK_FeedItems_Events", "Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("OpenGroovesModel.FK_FeedItems_Events", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("OpenGroovesModel.FK_FeedItems_Events", "Event", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OpenGroovesModel", Name="FeedItemType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeedItemType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeedItemType object.
        /// </summary>
        /// <param name="feedItemTypeId">Initial value of the FeedItemTypeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static FeedItemType CreateFeedItemType(global::System.Int32 feedItemTypeId, global::System.String name)
        {
            FeedItemType feedItemType = new FeedItemType();
            feedItemType.FeedItemTypeId = feedItemTypeId;
            feedItemType.Name = name;
            return feedItemType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FeedItemTypeId
        {
            get
            {
                return _FeedItemTypeId;
            }
            set
            {
                if (_FeedItemTypeId != value)
                {
                    OnFeedItemTypeIdChanging(value);
                    ReportPropertyChanging("FeedItemTypeId");
                    _FeedItemTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FeedItemTypeId");
                    OnFeedItemTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _FeedItemTypeId;
        partial void OnFeedItemTypeIdChanging(global::System.Int32 value);
        partial void OnFeedItemTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_FeedItems_FeedItemTypes", "FeedItem")]
        public EntityCollection<FeedItem> FeedItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedItem>("OpenGroovesModel.FK_FeedItems_FeedItemTypes", "FeedItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedItem>("OpenGroovesModel.FK_FeedItems_FeedItemTypes", "FeedItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OpenGroovesModel", Name="Gallery")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Gallery : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Gallery object.
        /// </summary>
        /// <param name="galleryId">Initial value of the GalleryId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="urlName">Initial value of the UrlName property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static Gallery CreateGallery(global::System.Guid galleryId, global::System.Guid userId, global::System.String name, global::System.String urlName, global::System.DateTime date)
        {
            Gallery gallery = new Gallery();
            gallery.GalleryId = galleryId;
            gallery.UserId = userId;
            gallery.Name = name;
            gallery.UrlName = urlName;
            gallery.Date = date;
            return gallery;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GalleryId
        {
            get
            {
                return _GalleryId;
            }
            set
            {
                if (_GalleryId != value)
                {
                    OnGalleryIdChanging(value);
                    ReportPropertyChanging("GalleryId");
                    _GalleryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GalleryId");
                    OnGalleryIdChanged();
                }
            }
        }
        private global::System.Guid _GalleryId;
        partial void OnGalleryIdChanging(global::System.Guid value);
        partial void OnGalleryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UrlName
        {
            get
            {
                return _UrlName;
            }
            set
            {
                OnUrlNameChanging(value);
                ReportPropertyChanging("UrlName");
                _UrlName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UrlName");
                OnUrlNameChanged();
            }
        }
        private global::System.String _UrlName;
        partial void OnUrlNameChanging(global::System.String value);
        partial void OnUrlNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> BandId
        {
            get
            {
                return _BandId;
            }
            set
            {
                OnBandIdChanging(value);
                ReportPropertyChanging("BandId");
                _BandId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BandId");
                OnBandIdChanged();
            }
        }
        private Nullable<global::System.Guid> _BandId;
        partial void OnBandIdChanging(Nullable<global::System.Guid> value);
        partial void OnBandIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_Galleries_aspnet_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OpenGroovesModel.FK_Galleries_aspnet_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OpenGroovesModel.FK_Galleries_aspnet_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OpenGroovesModel.FK_Galleries_aspnet_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("OpenGroovesModel.FK_Galleries_aspnet_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_Images_Galleries", "Image")]
        public EntityCollection<Image> Images
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Image>("OpenGroovesModel.FK_Images_Galleries", "Image");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Image>("OpenGroovesModel.FK_Images_Galleries", "Image", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_Galleries_Bands", "Band")]
        public Band Band
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Band>("OpenGroovesModel.FK_Galleries_Bands", "Band").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Band>("OpenGroovesModel.FK_Galleries_Bands", "Band").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Band> BandReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Band>("OpenGroovesModel.FK_Galleries_Bands", "Band");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Band>("OpenGroovesModel.FK_Galleries_Bands", "Band", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OpenGroovesModel", Name="Genre")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Genre : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Genre object.
        /// </summary>
        /// <param name="genreId">Initial value of the GenreId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Genre CreateGenre(global::System.Guid genreId, global::System.String name)
        {
            Genre genre = new Genre();
            genre.GenreId = genreId;
            genre.Name = name;
            return genre;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GenreId
        {
            get
            {
                return _GenreId;
            }
            set
            {
                if (_GenreId != value)
                {
                    OnGenreIdChanging(value);
                    ReportPropertyChanging("GenreId");
                    _GenreId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GenreId");
                    OnGenreIdChanged();
                }
            }
        }
        private global::System.Guid _GenreId;
        partial void OnGenreIdChanging(global::System.Guid value);
        partial void OnGenreIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "BandsGenres", "Band")]
        public EntityCollection<Band> Bands
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Band>("OpenGroovesModel.BandsGenres", "Band");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Band>("OpenGroovesModel.BandsGenres", "Band", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OpenGroovesModel", Name="Image")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Image : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Image object.
        /// </summary>
        /// <param name="imageId">Initial value of the ImageId property.</param>
        /// <param name="url">Initial value of the Url property.</param>
        /// <param name="caption">Initial value of the Caption property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="batchID">Initial value of the BatchID property.</param>
        public static Image CreateImage(global::System.Guid imageId, global::System.String url, global::System.String caption, global::System.DateTime date, global::System.Guid userId, global::System.Guid batchID)
        {
            Image image = new Image();
            image.ImageId = imageId;
            image.Url = url;
            image.Caption = caption;
            image.Date = date;
            image.UserId = userId;
            image.BatchID = batchID;
            return image;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ImageId
        {
            get
            {
                return _ImageId;
            }
            set
            {
                if (_ImageId != value)
                {
                    OnImageIdChanging(value);
                    ReportPropertyChanging("ImageId");
                    _ImageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ImageId");
                    OnImageIdChanged();
                }
            }
        }
        private global::System.Guid _ImageId;
        partial void OnImageIdChanging(global::System.Guid value);
        partial void OnImageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Caption
        {
            get
            {
                return _Caption;
            }
            set
            {
                OnCaptionChanging(value);
                ReportPropertyChanging("Caption");
                _Caption = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Caption");
                OnCaptionChanged();
            }
        }
        private global::System.String _Caption;
        partial void OnCaptionChanging(global::System.String value);
        partial void OnCaptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> GalleryId
        {
            get
            {
                return _GalleryId;
            }
            set
            {
                OnGalleryIdChanging(value);
                ReportPropertyChanging("GalleryId");
                _GalleryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GalleryId");
                OnGalleryIdChanged();
            }
        }
        private Nullable<global::System.Guid> _GalleryId;
        partial void OnGalleryIdChanging(Nullable<global::System.Guid> value);
        partial void OnGalleryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BatchID
        {
            get
            {
                return _BatchID;
            }
            set
            {
                OnBatchIDChanging(value);
                ReportPropertyChanging("BatchID");
                _BatchID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BatchID");
                OnBatchIDChanged();
            }
        }
        private global::System.Guid _BatchID;
        partial void OnBatchIDChanging(global::System.Guid value);
        partial void OnBatchIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "BandsImages", "Band")]
        public EntityCollection<Band> Bands
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Band>("OpenGroovesModel.BandsImages", "Band");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Band>("OpenGroovesModel.BandsImages", "Band", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_Images_aspnet_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OpenGroovesModel.FK_Images_aspnet_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OpenGroovesModel.FK_Images_aspnet_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OpenGroovesModel.FK_Images_aspnet_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("OpenGroovesModel.FK_Images_aspnet_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_Images_Galleries", "Gallery")]
        public Gallery Gallery
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gallery>("OpenGroovesModel.FK_Images_Galleries", "Gallery").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gallery>("OpenGroovesModel.FK_Images_Galleries", "Gallery").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Gallery> GalleryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gallery>("OpenGroovesModel.FK_Images_Galleries", "Gallery");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Gallery>("OpenGroovesModel.FK_Images_Galleries", "Gallery", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OpenGroovesModel", Name="MemberType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MemberType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MemberType object.
        /// </summary>
        /// <param name="memberTypeId">Initial value of the MemberTypeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static MemberType CreateMemberType(global::System.Guid memberTypeId, global::System.String name)
        {
            MemberType memberType = new MemberType();
            memberType.MemberTypeId = memberTypeId;
            memberType.Name = name;
            return memberType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MemberTypeId
        {
            get
            {
                return _MemberTypeId;
            }
            set
            {
                if (_MemberTypeId != value)
                {
                    OnMemberTypeIdChanging(value);
                    ReportPropertyChanging("MemberTypeId");
                    _MemberTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MemberTypeId");
                    OnMemberTypeIdChanged();
                }
            }
        }
        private global::System.Guid _MemberTypeId;
        partial void OnMemberTypeIdChanging(global::System.Guid value);
        partial void OnMemberTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_UsersBands_MemberTypes", "UsersBand")]
        public EntityCollection<UsersBand> UsersBands
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersBand>("OpenGroovesModel.FK_UsersBands_MemberTypes", "UsersBand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersBand>("OpenGroovesModel.FK_UsersBands_MemberTypes", "UsersBand", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OpenGroovesModel", Name="Message")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Message : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Message object.
        /// </summary>
        /// <param name="messageId">Initial value of the MessageId property.</param>
        /// <param name="senderUserId">Initial value of the SenderUserId property.</param>
        /// <param name="content">Initial value of the Content property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="isSenderHidden">Initial value of the IsSenderHidden property.</param>
        public static Message CreateMessage(global::System.Guid messageId, global::System.Guid senderUserId, global::System.String content, global::System.DateTime date, global::System.Boolean isSenderHidden)
        {
            Message message = new Message();
            message.MessageId = messageId;
            message.SenderUserId = senderUserId;
            message.Content = content;
            message.Date = date;
            message.IsSenderHidden = isSenderHidden;
            return message;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MessageId
        {
            get
            {
                return _MessageId;
            }
            set
            {
                if (_MessageId != value)
                {
                    OnMessageIdChanging(value);
                    ReportPropertyChanging("MessageId");
                    _MessageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageId");
                    OnMessageIdChanged();
                }
            }
        }
        private global::System.Guid _MessageId;
        partial void OnMessageIdChanging(global::System.Guid value);
        partial void OnMessageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SenderUserId
        {
            get
            {
                return _SenderUserId;
            }
            set
            {
                OnSenderUserIdChanging(value);
                ReportPropertyChanging("SenderUserId");
                _SenderUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SenderUserId");
                OnSenderUserIdChanged();
            }
        }
        private global::System.Guid _SenderUserId;
        partial void OnSenderUserIdChanging(global::System.Guid value);
        partial void OnSenderUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSenderHidden
        {
            get
            {
                return _IsSenderHidden;
            }
            set
            {
                OnIsSenderHiddenChanging(value);
                ReportPropertyChanging("IsSenderHidden");
                _IsSenderHidden = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSenderHidden");
                OnIsSenderHiddenChanged();
            }
        }
        private global::System.Boolean _IsSenderHidden;
        partial void OnIsSenderHiddenChanging(global::System.Boolean value);
        partial void OnIsSenderHiddenChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_Messages_aspnet_Users", "User")]
        public User Sender
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OpenGroovesModel.FK_Messages_aspnet_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OpenGroovesModel.FK_Messages_aspnet_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> SenderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OpenGroovesModel.FK_Messages_aspnet_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("OpenGroovesModel.FK_Messages_aspnet_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_MessageRecipients_Messages", "MessageRecipient")]
        public EntityCollection<MessageRecipient> MessageRecipients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MessageRecipient>("OpenGroovesModel.FK_MessageRecipients_Messages", "MessageRecipient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MessageRecipient>("OpenGroovesModel.FK_MessageRecipients_Messages", "MessageRecipient", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OpenGroovesModel", Name="MessageRecipient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MessageRecipient : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MessageRecipient object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="messageId">Initial value of the MessageId property.</param>
        /// <param name="isRead">Initial value of the IsRead property.</param>
        public static MessageRecipient CreateMessageRecipient(global::System.Guid userId, global::System.Guid messageId, global::System.Boolean isRead)
        {
            MessageRecipient messageRecipient = new MessageRecipient();
            messageRecipient.UserId = userId;
            messageRecipient.MessageId = messageId;
            messageRecipient.IsRead = isRead;
            return messageRecipient;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MessageId
        {
            get
            {
                return _MessageId;
            }
            set
            {
                if (_MessageId != value)
                {
                    OnMessageIdChanging(value);
                    ReportPropertyChanging("MessageId");
                    _MessageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageId");
                    OnMessageIdChanged();
                }
            }
        }
        private global::System.Guid _MessageId;
        partial void OnMessageIdChanging(global::System.Guid value);
        partial void OnMessageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRead
        {
            get
            {
                return _IsRead;
            }
            set
            {
                OnIsReadChanging(value);
                ReportPropertyChanging("IsRead");
                _IsRead = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRead");
                OnIsReadChanged();
            }
        }
        private global::System.Boolean _IsRead;
        partial void OnIsReadChanging(global::System.Boolean value);
        partial void OnIsReadChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_MessageRecipients_aspnet_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OpenGroovesModel.FK_MessageRecipients_aspnet_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OpenGroovesModel.FK_MessageRecipients_aspnet_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OpenGroovesModel.FK_MessageRecipients_aspnet_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("OpenGroovesModel.FK_MessageRecipients_aspnet_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_MessageRecipients_Messages", "Message")]
        public Message Message
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Message>("OpenGroovesModel.FK_MessageRecipients_Messages", "Message").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Message>("OpenGroovesModel.FK_MessageRecipients_Messages", "Message").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Message> MessageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Message>("OpenGroovesModel.FK_MessageRecipients_Messages", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Message>("OpenGroovesModel.FK_MessageRecipients_Messages", "Message", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OpenGroovesModel", Name="RelationType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RelationType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RelationType object.
        /// </summary>
        /// <param name="relationTypeId">Initial value of the RelationTypeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static RelationType CreateRelationType(global::System.Int32 relationTypeId, global::System.String name)
        {
            RelationType relationType = new RelationType();
            relationType.RelationTypeId = relationTypeId;
            relationType.Name = name;
            return relationType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RelationTypeId
        {
            get
            {
                return _RelationTypeId;
            }
            set
            {
                if (_RelationTypeId != value)
                {
                    OnRelationTypeIdChanging(value);
                    ReportPropertyChanging("RelationTypeId");
                    _RelationTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RelationTypeId");
                    OnRelationTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _RelationTypeId;
        partial void OnRelationTypeIdChanging(global::System.Int32 value);
        partial void OnRelationTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_UsersBands_RelationTypes", "UsersBand")]
        public EntityCollection<UsersBand> UsersBands
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersBand>("OpenGroovesModel.FK_UsersBands_RelationTypes", "UsersBand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersBand>("OpenGroovesModel.FK_UsersBands_RelationTypes", "UsersBand", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OpenGroovesModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        /// <param name="loweredRoleName">Initial value of the LoweredRoleName property.</param>
        public static Role CreateRole(global::System.Guid applicationId, global::System.Guid roleId, global::System.String roleName, global::System.String loweredRoleName)
        {
            Role role = new Role();
            role.ApplicationId = applicationId;
            role.RoleId = roleId;
            role.RoleName = roleName;
            role.LoweredRoleName = loweredRoleName;
            return role;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredRoleName
        {
            get
            {
                return _LoweredRoleName;
            }
            set
            {
                OnLoweredRoleNameChanging(value);
                ReportPropertyChanging("LoweredRoleName");
                _LoweredRoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredRoleName");
                OnLoweredRoleNameChanged();
            }
        }
        private global::System.String _LoweredRoleName;
        partial void OnLoweredRoleNameChanging(global::System.String value);
        partial void OnLoweredRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "aspnet_UsersInRoles", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("OpenGroovesModel.aspnet_UsersInRoles", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("OpenGroovesModel.aspnet_UsersInRoles", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OpenGroovesModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="loweredUserName">Initial value of the LoweredUserName property.</param>
        /// <param name="latitude">Initial value of the Latitude property.</param>
        /// <param name="longitude">Initial value of the Longitude property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="isAnonymous">Initial value of the IsAnonymous property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        /// <param name="setupRequired">Initial value of the SetupRequired property.</param>
        public static User CreateUser(global::System.Guid userId, global::System.String userName, global::System.String loweredUserName, global::System.Double latitude, global::System.Double longitude, global::System.Guid applicationId, global::System.Boolean isAnonymous, global::System.DateTime lastActivityDate, global::System.Boolean setupRequired)
        {
            User user = new User();
            user.UserId = userId;
            user.UserName = userName;
            user.LoweredUserName = loweredUserName;
            user.Latitude = latitude;
            user.Longitude = longitude;
            user.ApplicationId = applicationId;
            user.IsAnonymous = isAnonymous;
            user.LastActivityDate = lastActivityDate;
            user.SetupRequired = setupRequired;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredUserName
        {
            get
            {
                return _LoweredUserName;
            }
            set
            {
                OnLoweredUserNameChanging(value);
                ReportPropertyChanging("LoweredUserName");
                _LoweredUserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredUserName");
                OnLoweredUserNameChanged();
            }
        }
        private global::System.String _LoweredUserName;
        partial void OnLoweredUserNameChanging(global::System.String value);
        partial void OnLoweredUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RealName
        {
            get
            {
                return _RealName;
            }
            set
            {
                OnRealNameChanging(value);
                ReportPropertyChanging("RealName");
                _RealName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RealName");
                OnRealNameChanged();
            }
        }
        private global::System.String _RealName;
        partial void OnRealNameChanging(global::System.String value);
        partial void OnRealNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AvatarUrl
        {
            get
            {
                return _AvatarUrl;
            }
            set
            {
                OnAvatarUrlChanging(value);
                ReportPropertyChanging("AvatarUrl");
                _AvatarUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AvatarUrl");
                OnAvatarUrlChanged();
            }
        }
        private global::System.String _AvatarUrl;
        partial void OnAvatarUrlChanging(global::System.String value);
        partial void OnAvatarUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private global::System.String _Zip;
        partial void OnZipChanging(global::System.String value);
        partial void OnZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private global::System.Double _Latitude;
        partial void OnLatitudeChanging(global::System.Double value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private global::System.Double _Longitude;
        partial void OnLongitudeChanging(global::System.Double value);
        partial void OnLongitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AIM
        {
            get
            {
                return _AIM;
            }
            set
            {
                OnAIMChanging(value);
                ReportPropertyChanging("AIM");
                _AIM = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AIM");
                OnAIMChanged();
            }
        }
        private global::System.String _AIM;
        partial void OnAIMChanging(global::System.String value);
        partial void OnAIMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Facebook
        {
            get
            {
                return _Facebook;
            }
            set
            {
                OnFacebookChanging(value);
                ReportPropertyChanging("Facebook");
                _Facebook = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Facebook");
                OnFacebookChanged();
            }
        }
        private global::System.String _Facebook;
        partial void OnFacebookChanging(global::System.String value);
        partial void OnFacebookChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Twitter
        {
            get
            {
                return _Twitter;
            }
            set
            {
                OnTwitterChanging(value);
                ReportPropertyChanging("Twitter");
                _Twitter = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Twitter");
                OnTwitterChanged();
            }
        }
        private global::System.String _Twitter;
        partial void OnTwitterChanging(global::System.String value);
        partial void OnTwitterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAnonymous
        {
            get
            {
                return _IsAnonymous;
            }
            set
            {
                OnIsAnonymousChanging(value);
                ReportPropertyChanging("IsAnonymous");
                _IsAnonymous = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAnonymous");
                OnIsAnonymousChanged();
            }
        }
        private global::System.Boolean _IsAnonymous;
        partial void OnIsAnonymousChanging(global::System.Boolean value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileAlias
        {
            get
            {
                return _MobileAlias;
            }
            set
            {
                OnMobileAliasChanging(value);
                ReportPropertyChanging("MobileAlias");
                _MobileAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileAlias");
                OnMobileAliasChanged();
            }
        }
        private global::System.String _MobileAlias;
        partial void OnMobileAliasChanging(global::System.String value);
        partial void OnMobileAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Bio
        {
            get
            {
                return _Bio;
            }
            set
            {
                OnBioChanging(value);
                ReportPropertyChanging("Bio");
                _Bio = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Bio");
                OnBioChanged();
            }
        }
        private global::System.String _Bio;
        partial void OnBioChanging(global::System.String value);
        partial void OnBioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Interests
        {
            get
            {
                return _Interests;
            }
            set
            {
                OnInterestsChanging(value);
                ReportPropertyChanging("Interests");
                _Interests = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Interests");
                OnInterestsChanged();
            }
        }
        private global::System.String _Interests;
        partial void OnInterestsChanging(global::System.String value);
        partial void OnInterestsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SetupRequired
        {
            get
            {
                return _SetupRequired;
            }
            set
            {
                OnSetupRequiredChanging(value);
                ReportPropertyChanging("SetupRequired");
                _SetupRequired = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SetupRequired");
                OnSetupRequiredChanged();
            }
        }
        private global::System.Boolean _SetupRequired;
        partial void OnSetupRequiredChanging(global::System.Boolean value);
        partial void OnSetupRequiredChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "UsersEvents", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("OpenGroovesModel.UsersEvents", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("OpenGroovesModel.UsersEvents", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "UsersVenues", "Venue")]
        public EntityCollection<Venue> Venues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Venue>("OpenGroovesModel.UsersVenues", "Venue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Venue>("OpenGroovesModel.UsersVenues", "Venue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_UsersInBands_aspnet_Users", "UsersBand")]
        public EntityCollection<UsersBand> UsersBands
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersBand>("OpenGroovesModel.FK_UsersInBands_aspnet_Users", "UsersBand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersBand>("OpenGroovesModel.FK_UsersInBands_aspnet_Users", "UsersBand", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_Images_aspnet_Users", "Image")]
        public EntityCollection<Image> Images
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Image>("OpenGroovesModel.FK_Images_aspnet_Users", "Image");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Image>("OpenGroovesModel.FK_Images_aspnet_Users", "Image", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_FeedItems_aspnet_Users", "FeedItem")]
        public EntityCollection<FeedItem> FeedItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedItem>("OpenGroovesModel.FK_FeedItems_aspnet_Users", "FeedItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedItem>("OpenGroovesModel.FK_FeedItems_aspnet_Users", "FeedItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_Galleries_aspnet_Users", "Gallery")]
        public EntityCollection<Gallery> Galleries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Gallery>("OpenGroovesModel.FK_Galleries_aspnet_Users", "Gallery");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Gallery>("OpenGroovesModel.FK_Galleries_aspnet_Users", "Gallery", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_MessageRecipients_aspnet_Users", "MessageRecipient")]
        public EntityCollection<MessageRecipient> MessagesReceived
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MessageRecipient>("OpenGroovesModel.FK_MessageRecipients_aspnet_Users", "MessageRecipient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MessageRecipient>("OpenGroovesModel.FK_MessageRecipients_aspnet_Users", "MessageRecipient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_Messages_aspnet_Users", "Message")]
        public EntityCollection<Message> MessagesSent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("OpenGroovesModel.FK_Messages_aspnet_Users", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("OpenGroovesModel.FK_Messages_aspnet_Users", "Message", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_UserSettings_aspnet_Users", "UserSetting")]
        public EntityCollection<UserSetting> Settings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserSetting>("OpenGroovesModel.FK_UserSettings_aspnet_Users", "UserSetting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserSetting>("OpenGroovesModel.FK_UserSettings_aspnet_Users", "UserSetting", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OpenGroovesModel", Name="UsersBand")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsersBand : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsersBand object.
        /// </summary>
        /// <param name="relationId">Initial value of the RelationId property.</param>
        /// <param name="bandId">Initial value of the BandId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="relationTypeId">Initial value of the RelationTypeId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static UsersBand CreateUsersBand(global::System.Guid relationId, global::System.Guid bandId, global::System.Guid userId, global::System.Int32 relationTypeId, global::System.Boolean isActive, global::System.DateTime date)
        {
            UsersBand usersBand = new UsersBand();
            usersBand.RelationId = relationId;
            usersBand.BandId = bandId;
            usersBand.UserId = userId;
            usersBand.RelationTypeId = relationTypeId;
            usersBand.IsActive = isActive;
            usersBand.Date = date;
            return usersBand;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RelationId
        {
            get
            {
                return _RelationId;
            }
            set
            {
                OnRelationIdChanging(value);
                ReportPropertyChanging("RelationId");
                _RelationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RelationId");
                OnRelationIdChanged();
            }
        }
        private global::System.Guid _RelationId;
        partial void OnRelationIdChanging(global::System.Guid value);
        partial void OnRelationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BandId
        {
            get
            {
                return _BandId;
            }
            set
            {
                if (_BandId != value)
                {
                    OnBandIdChanging(value);
                    ReportPropertyChanging("BandId");
                    _BandId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BandId");
                    OnBandIdChanged();
                }
            }
        }
        private global::System.Guid _BandId;
        partial void OnBandIdChanging(global::System.Guid value);
        partial void OnBandIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RelationTypeId
        {
            get
            {
                return _RelationTypeId;
            }
            set
            {
                OnRelationTypeIdChanging(value);
                ReportPropertyChanging("RelationTypeId");
                _RelationTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RelationTypeId");
                OnRelationTypeIdChanged();
            }
        }
        private global::System.Int32 _RelationTypeId;
        partial void OnRelationTypeIdChanging(global::System.Int32 value);
        partial void OnRelationTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> MemberTypeId
        {
            get
            {
                return _MemberTypeId;
            }
            set
            {
                OnMemberTypeIdChanging(value);
                ReportPropertyChanging("MemberTypeId");
                _MemberTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberTypeId");
                OnMemberTypeIdChanged();
            }
        }
        private Nullable<global::System.Guid> _MemberTypeId;
        partial void OnMemberTypeIdChanging(Nullable<global::System.Guid> value);
        partial void OnMemberTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_UsersInBands_aspnet_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OpenGroovesModel.FK_UsersInBands_aspnet_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OpenGroovesModel.FK_UsersInBands_aspnet_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OpenGroovesModel.FK_UsersInBands_aspnet_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("OpenGroovesModel.FK_UsersInBands_aspnet_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_UsersInBands_aspnet_Users1", "Band")]
        public Band Band
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Band>("OpenGroovesModel.FK_UsersInBands_aspnet_Users1", "Band").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Band>("OpenGroovesModel.FK_UsersInBands_aspnet_Users1", "Band").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Band> BandReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Band>("OpenGroovesModel.FK_UsersInBands_aspnet_Users1", "Band");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Band>("OpenGroovesModel.FK_UsersInBands_aspnet_Users1", "Band", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_UsersBands_MemberTypes", "MemberType")]
        public MemberType MemberType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MemberType>("OpenGroovesModel.FK_UsersBands_MemberTypes", "MemberType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MemberType>("OpenGroovesModel.FK_UsersBands_MemberTypes", "MemberType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MemberType> MemberTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MemberType>("OpenGroovesModel.FK_UsersBands_MemberTypes", "MemberType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MemberType>("OpenGroovesModel.FK_UsersBands_MemberTypes", "MemberType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_UsersBands_RelationTypes", "RelationType")]
        public RelationType RelationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RelationType>("OpenGroovesModel.FK_UsersBands_RelationTypes", "RelationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RelationType>("OpenGroovesModel.FK_UsersBands_RelationTypes", "RelationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RelationType> RelationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RelationType>("OpenGroovesModel.FK_UsersBands_RelationTypes", "RelationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RelationType>("OpenGroovesModel.FK_UsersBands_RelationTypes", "RelationType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OpenGroovesModel", Name="UserSetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserSetting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserSetting object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        public static UserSetting CreateUserSetting(global::System.Guid userId, global::System.String key)
        {
            UserSetting userSetting = new UserSetting();
            userSetting.UserId = userId;
            userSetting.Key = key;
            return userSetting;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key
        {
            get
            {
                return _Key;
            }
            set
            {
                if (_Key != value)
                {
                    OnKeyChanging(value);
                    ReportPropertyChanging("Key");
                    _Key = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Key");
                    OnKeyChanged();
                }
            }
        }
        private global::System.String _Key;
        partial void OnKeyChanging(global::System.String value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_UserSettings_aspnet_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OpenGroovesModel.FK_UserSettings_aspnet_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OpenGroovesModel.FK_UserSettings_aspnet_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OpenGroovesModel.FK_UserSettings_aspnet_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("OpenGroovesModel.FK_UserSettings_aspnet_Users", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OpenGroovesModel", Name="Venue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Venue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Venue object.
        /// </summary>
        /// <param name="venueId">Initial value of the VenueId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="urlName">Initial value of the UrlName property.</param>
        public static Venue CreateVenue(global::System.Guid venueId, global::System.String name, global::System.String urlName)
        {
            Venue venue = new Venue();
            venue.VenueId = venueId;
            venue.Name = name;
            venue.UrlName = urlName;
            return venue;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid VenueId
        {
            get
            {
                return _VenueId;
            }
            set
            {
                if (_VenueId != value)
                {
                    OnVenueIdChanging(value);
                    ReportPropertyChanging("VenueId");
                    _VenueId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VenueId");
                    OnVenueIdChanged();
                }
            }
        }
        private global::System.Guid _VenueId;
        partial void OnVenueIdChanging(global::System.Guid value);
        partial void OnVenueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UrlName
        {
            get
            {
                return _UrlName;
            }
            set
            {
                OnUrlNameChanging(value);
                ReportPropertyChanging("UrlName");
                _UrlName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UrlName");
                OnUrlNameChanged();
            }
        }
        private global::System.String _UrlName;
        partial void OnUrlNameChanging(global::System.String value);
        partial void OnUrlNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "FK_Events_Venues", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("OpenGroovesModel.FK_Events_Venues", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("OpenGroovesModel.FK_Events_Venues", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OpenGroovesModel", "UsersVenues", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("OpenGroovesModel.UsersVenues", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("OpenGroovesModel.UsersVenues", "User", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
